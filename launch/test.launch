<!--
-->
<launch>
  <arg name="robot_x" default="1.5"/>
  <arg name="robot_y" default="2.0"/>
  <arg name="robot_z" default="0.5"/>
  # Robot position. 
  <node pkg="tf" type="static_transform_publisher" name="odom_tf" args="$(arg robot_x) $(arg robot_y) $(arg robot_z) 0 0 0 map base_link 10" />

  <arg name="target_x" default="1.25"/>
  <arg name="target_y" default="7.2"/>
  <arg name="target_z" default="3.0"/>

  # Flight 1 map conf
  <arg name="map" default="stage_2" />
  <arg name="map_path" default="$(find marsupial_optimizer)/maps/$(arg map)"/>

  # Launch Octomaps
  <arg name="resolution" default="0.05"/>
  <node name="octomap_server" type="octomap_server_node" pkg="octomap_server" args="$(arg map_path).bt">
    <param name="resolution" value="$(arg resolution)"/>
    <param name="frame_id" value="map"/>
  </node>

  <include file="$(find marsupial_optimizer)/launch/octomap_server.launch">
        <arg name="map_file"  value="$(arg map)_obstacles"/>    
        <arg name="node_name"  value="octomap_server_obstacles"/>  
        <arg name="published_pc"  value="/region_growing_obstacles_pc_map"/>   
    </include>
    <include file="$(find marsupial_optimizer)/launch/octomap_server.launch">
        <arg name="map_file"  value="$(arg map)_traversability"/>   
        <arg name="node_name"  value="octomap_server_traversability"/>   
        <arg name="published_pc"  value="/region_growing_traversability_pc_map"/>   
    </include>


  <!-- Catenary Checker-->
  <arg name="precomputed_file" default="$(find marsupial_optimizer)/maps/$(arg map).tar.gz"/>
  <arg name="dbscan_epsilon" default="0.5"/>
  <arg name="dbscan_gamma" default="0.1"/>
  <arg name="dbscan_theta" default="0.1"/>
  <arg name="use_dbscan_lines" default="false"/>
  <arg name="dbscan_min_points" default="5"/>
  <arg name="use_parabola"   default="true"/>
  <arg name="use_both"   default="true"/>
  <arg name="plane_dist" default="0.1"/>  

  <arg name="debug" default="true"/>
  <arg name="debug_prefix" default="gdb --args" if="$(arg debug)"/>
  <arg name="debug_prefix" default="" unless="$(arg debug)"/>
  <node name="catenary_checker" pkg="catenary_checker" type="catenary_checker_manager_node" output="screen"  launch-prefix="$(arg debug_prefix)" >
    <!-- For Grid3D -->
    <param name="map_path"   value="$(arg map_path).bt"/>
    <param name="global_frame_id"   value="map"/>
    <remap from="points2" to="/octomap_point_cloud_centers"/>
    <param name="distance_obstacle_ugv"         value="1.0"/> <!-- bound distance UGV to obstacles 0.05[m] resolution of the map-->
    <param name="distance_obstacle_uav"         value="0.6"/> <!-- bound distance UAV to obstacles 0.05[m] resolution of the map-->
    <param name="distance_catenary_obstacle"  value="0.1" unless="$(arg use_parabola)"/> <!--bound distance catenary to obstacles [m] -->   
    <param name="distance_catenary_obstacle"  value="0.1" if="$(arg use_parabola)"/> <!--bound distance catenary to obstacles [m] -->   
    <!-- Catenary Checker-->
    <param name="plane_dist" value="$(arg plane_dist)"/>
    <param name="use_parabola"   value="$(arg use_parabola)"/>
    <param name="precomputed_file" value="$(arg precomputed_file)"/>
    <param name="dbscan_min_points" value="$(arg dbscan_min_points)"/>
    <param name="dbscan_epsilon" value="$(arg dbscan_epsilon)"/>
    <param name="dbscan_gamma" value="$(arg dbscan_gamma)"/>
    <param name="dbscan_theta" value="$(arg dbscan_theta)"/>
    <param name="use_dbscan_lines" value="$(arg use_dbscan_lines)"/>
    <param name="use_both" value="$(arg use_both)"/>
    <param name="debug" value="true"/>
  </node>

  <node name="rviz" type="rviz" pkg="rviz" args="-d $(find catenary_checker)/viz/catenary_checker.rviz"/>

  <node pkg="catenary_checker" type="publish_pose.sh" name="pose_pub" args="$(arg target_x) $(arg target_y) $(arg target_z) map 5"/>


</launch>	

